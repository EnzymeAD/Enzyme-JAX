name: Build Wheel
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    name: Build ${{ matrix.os }} python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [openstack22, tpu]
        python: ["3.12"]
    timeout-minutes: 500
    steps:
      - name: add llvm
        run: |
            if [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
              sudo apt-get update
              sudo apt-get install -y git gcc g++ 
            fi
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - run: |
            if [ "${{matrix.os}}" == "openstack22" ]; then
              sudo rm -rf ~/.cache/bazel ~/.cache/bazelisk
            fi

      - uses: bazel-contrib/setup-bazel@0.8.5
        name: Set up Bazel
        with:
          # Avoid downloading Bazel every time.
          bazelisk-cache: true
          # Store build cache per workflow.
          # disk-cache: ${{ github.workflow }}-${{ hashFiles('.github/workflows/build.yml') }}
          # Share repository cache between workflows.
          repository-cache: true
          bazelisk-version: 1.x

      - name: test
        run: |
          HERMETIC_PYTHON_VERSION=${{ matrix.python }} bazel test --test_output=errors ...
          HERMETIC_PYTHON_VERSION=${{ matrix.python }} bazel test --cache_test_results=no //test:bench_vs_xla
          HERMETIC_PYTHON_VERSION=${{ matrix.python }} bazel test --cache_test_results=no //test:llama
          cat bazel-out/*/testlogs/test/llama/test.log
          cp bazel-out/*/testlogs/test/llama/test.log llama.log

          
      - name: Build Wheel
        run: |
          sudo rm bazel-bin/*.whl || echo
          HERMETIC_PYTHON_VERSION=${{ matrix.python }} bazel build :wheel
          cp bazel-bin/*.whl .

      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: Wheel-${{ matrix.os }}
          path: "*.{whl,log}"
