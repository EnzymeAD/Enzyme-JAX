name: Build Wheel
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [openstack22]
        python: ["3.11"]
    timeout-minutes: 500
    steps:
      - name: add llvm
        run: |
            if [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
              sudo apt-get update
              sudo apt-get install -y git gcc g++ python3 python3-dev python3-pip
              sudo python3 -m pip install --upgrade lit
            fi
      - run: python3 -m pip install --user numpy
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: bazelbuild/setup-bazelisk@v2
      - name: Mount bazel cache  # Optional
        uses: actions/cache@v3
        with:
          path: "~/.cache/bazel"
          key: bazel-${{ matrix.os }}
      - run: sudo find ~/.cache/bazel ~/.cache/bazelisk -iname "*.whl" -exec rm {} \;
      - run: |
          HERMETIC_PYTHON_VERSION=${{ matrix.python }} bazel build :enzyme_ad @llvm-project//llvm:FileCheck
          bazel cquery "allpaths(//src/enzyme_ad/jax:enzyme_call,@xla//xla/stream_executor:executor_cache)" --notool_deps
          bazel --version
          nm -C $(find bazel-out/ -name enzyme_call.so -type f) | grep ExecutorCache::
      - run: cp bazel-bin/*.whl .

      - name: test
        run: |
          python3 -m pip install --user --force-reinstall "jax[cpu]" *.whl
          bazel test --test_output=errors ...

      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: Wheel-${{ matrix.os }}
          path: "*.whl"
