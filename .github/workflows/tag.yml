name: Build Wheel
on:
  release:
    types:
    - created

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [openstack22]
        python: ["3.10", "3.11", "3.12", "3.13"]
    timeout-minutes: 500
    steps:
      - name: add llvm
        run: |
            if [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
              sudo apt-get update
              sudo apt-get install -y git gcc g++ python3 python3-dev python3-pip
            fi
      - run: python3 -m pip install --user numpy twine
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: |
          export TAG=`echo $GITHUB_REF | cut -c2- `
          echo $TAG
          sed -i.bak "s~version = \"[0-9.]*\"~version = \"$TAG\"~g" BUILD
          cat BUILD
      - uses: bazelbuild/setup-bazelisk@v2
      - name: Mount bazel cache  # Optional
        uses: actions/cache@v3
        with:
          path: "~/.cache/bazel"
          key: bazel-${{ matrix.os }}
      - run: find ~/.cache/bazel ~/.cache/bazelisk -iname "*.whl" -exec rm {} \;
      - run: HERMETIC_PYTHON_VERSION=${{ matrix.python }} bazel build :enzyme_ad
      - env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: python3 -m twine upload bazel-bin/*.whl
