name: Test GB-25

on:
  push:
    branches:
    - main
    paths:
      - '.github/workflows/test-gb-25.yml'
      - '**/BUILD'
      - '**/WORKSPACE'
      - '**/*.bzl'
      - 'patches/**'
      - 'src/**'
      - 'third_party/**'
  pull_request:
    branches:
    - main
    paths:
      - '.github/workflows/test-gb-25.yml'
      - '**/BUILD'
      - '**/WORKSPACE'
      - '**/*.bzl'
      - 'patches/**'
      - 'src/**'
      - 'third_party/**'

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test-gb-25:
    name: Test GB-25 - ${{ matrix.os }} - julia ${{ matrix.julia_version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120

    container:
      image: ${{ (contains(matrix.os, 'linux') && 'ghcr.io/enzymead/reactant-docker-images@sha256:14f2f7ae6eff98a0a8e37e9b84542c068eafa0ab4360a8fb08d306c2486cd169' ) || '' }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - linux-x86-a2-48-a100-4gpu
        julia_version:
          - '1.11'
    steps:
      - name: Check GPUs
        if: ${{ contains(matrix.os, 'a100') }}
        run: |
          nvidia-smi
      - uses: bazel-contrib/setup-bazel@0.15.0
        name: Set up Bazel
        with:
          # Avoid downloading Bazel every time.
          bazelisk-cache: true
          # Store build cache per workflow.
          disk-cache: gb-25-${{ github.workflow }}-${{ matrix.os }}-${{ matrix.julia_version }}
          # Share repository cache between workflows.
          repository-cache: true
          bazelisk-version: 1.x
      - name: Checkout Reactant.jl
        uses: actions/checkout@v4
        with:
          repository: 'EnzymeAD/Reactant.jl'
          ref: 'main'
          path: 'Reactant.jl'
      - name: Set REACTANT_DIR
        # We have to use `${GITHUB_WORKSPACE}` instead of `github.workspace` because GitHub
        # is terrible and the two don't match inside containers:
        # https://github.com/actions/runner/issues/2058
        run: |
          REACTANT_DIR=${GITHUB_WORKSPACE}/Reactant.jl
          # Make sure this directory exists, for good measure
          ls -lhrt "${REACTANT_DIR}"
          echo "REACTANT_DIR=${REACTANT_DIR}" >> ${GITHUB_ENV}
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.julia_version }}
      - uses: julia-actions/cache@v2
      - name: Build local libReactant
        timeout-minutes: 60
        run: |
          # Modify commit Enzyme-JAX commit
          sed -i.bak 's/ENZYMEXLA_COMMIT = ".*"/ENZYMEXLA_COMMIT = "${{ github.sha }}"/' ReactantExtra/WORKSPACE

          julia --project --color=yes -e 'using Pkg; Pkg.instantiate()'
          julia --project --color=yes -O0 build_local.jl --cc=clang --gcc_host_compiler_path=
        working-directory: ${{ env.REACTANT_DIR }}/deps
      - name: Checkout GB-25
        uses: actions/checkout@v4
        with:
          repository: 'PRONTOLab/GB-25'
          ref: 'main'
          path: 'GB-25'
      - name: Set GB25_DIR
        # We have to use `${GITHUB_WORKSPACE}` instead of `github.workspace` because GitHub
        # is terrible and the two don't match inside containers:
        # https://github.com/actions/runner/issues/2058
        run: |
          GB25_DIR=${GITHUB_WORKSPACE}/GB-25
          # Make sure this directory exists, for good measure
          ls -lhrt "${GB25_DIR}"
          echo "GB25_DIR=${GB25_DIR}" >> ${GITHUB_ENV}
      - name: Instantiate GB-25 environment
        timeout-minutes: 20
        run: |
          cp ${{ env.REACTANT_DIR }}/LocalPreferences.toml ${{ env.GB25_DIR }}/LocalPreferences.toml
          julia --project --color=yes -e 'using Pkg; Pkg.instantiate()'
        working-directory: ${{ env.GB25_DIR }}
      - name: Install mpiexecjl
        run: |
          MPIEXECJL_DIR="${GITHUB_WORKSPACE}/bin"
          julia --project --color=yes -e "using MPI; MPI.install_mpiexecjl(; destdir=\"${MPIEXECJL_DIR}\")"
          echo "${MPIEXECJL_DIR}" >> "${GITHUB_PATH}"
        working-directory: ${{ env.GB25_DIR }}
      - name: Run GB-25 simulation
        timeout-minutes: 45
        run: |
          timeout --signal=TERM --verbose 40m mpiexecjl -np 1 julia --color=yes --project -O0 sharding/sharded_baroclinic_instability_simulation_run.jl
        working-directory: ${{ env.GB25_DIR }}
