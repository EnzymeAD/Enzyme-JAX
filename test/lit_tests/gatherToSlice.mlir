// RUN: mlir-opt -split-input-file -convert-stablehlo-gather-to-slice %s | FileCheck %s

// Original example:
// %c_1179 = stablehlo.constant dense<"0x00000000000000006B00000000000000070000000000000000..."> : tensor<180x3xi64>
// %2803 = stablehlo.dynamic_update_slice %2715, %2802, %c_1336, %c_1308, %c_1329 : (tensor<1x128x194xf64>, tensor<1x1x180xf64>, tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<1x128x194xf64>
// %2804 = "stablehlo.gather"(%2803, %c_1179) <{dimension_numbers = #stablehlo.gather<collapsed_slice_dims = [0, 1, 2],
//   start_index_map = [0, 1, 2], index_vector_dim = 1>, indices_are_sorted = false, 
//   slice_sizes = array<i64: 1, 1, 1>}> : (tensor<1x128x194xf64>, tensor<180x3xi64>) -> tensor<180xf64>

// CHECK-LABEL: func @gather_to_slice
//func.func @gather_to_slice_wrapped_around(%arg0: tensor<1x128x194xf64>) -> tensor<180xf64> {
//  %indices = stablehlo.constant dense<"0xtensor<180x3xi64>
//  
//  // CHECK: %[[SLICE:.*]] = "stablehlo.slice"(%arg0)
//  // CHECK-SAME: start_indices = array<i64: 0, 107, 186>
//  // CHECK-SAME: limit_indices = array<i64: 1, 107, 8>
//  // CHECK-SAME: strides = array<i64: 1, 1, 1>
//  // CHECK: return %[[SLICE]] : tensor<180xf64>
//  %result = "stablehlo.gather"(%arg0, %indices) {
//    dimension_numbers = #stablehlo.gather<
//      collapsed_slice_dims = [0, 1, 2],
//      start_index_map = [0, 1, 2],
//      index_vector_dim = 1
//    >, 
//    indices_are_sorted = false, 
//    slice_sizes = array<i64: 1, 1, 1>
//  } : (tensor<1x128x194xf64>, tensor<180x3xi64>) -> tensor<180xf64>
//  
//  return %result : tensor<180xf64>
//}

// -----

// Example of multi dim strided slice op (for reference):
//  %1 = "stablehlo.slice"(%arg0)
//  start_indices = array<i64: 0, 186, 107>
//  limit_indices = array<i64: 0, 8, 107>
//  strides = array<i64: 1, 1, 1>
//  } : tensor<1x128x194xf64> -> tensor<180xf64>
//

//func.func @gather_to_slice(%arg0: tensor<1x128x194xf64>) -> tensor<179xf64> {
//  %indices = stablehlo.constant dense<"0xtensor<179x3xi64>
//  
//  // CHECK: %[[SLICE:.*]] = "stablehlo.slice"(%arg0)
//  // CHECK-SAME: start_indices = array<i64: 0, 107, 186>
//  // CHECK-SAME: limit_indices = array<i64: 1, 107, 8>
//  // CHECK-SAME: strides = array<i64: 1, 1, 1>
//  // CHECK: return %[[SLICE]] : tensor<179xf64>
//  %result = "stablehlo.gather"(%arg0, %indices) {
//    dimension_numbers = #stablehlo.gather<
//      collapsed_slice_dims = [0, 1, 2],
//      start_index_map = [0, 1, 2],
//      index_vector_dim = 1
//    >, 
//    indices_are_sorted = false, 
//    slice_sizes = array<i64: 1, 1, 1>
//  } : (tensor<1x128x194xf64>, tensor<179x3xi64>) -> tensor<179xf64>
//  
//  return %result : tensor<179xf64>
//}

func.func @gather_to_slice_simple(%arg0: tensor<1x128x194xf64>) -> tensor<3xf64> {
  %indices = stablehlo.constant dense<[
  [0, 10, 4],
  [0, 10, 5],
  [0, 10, 6]
]> : tensor<3x3xi64>
  // CHECK-NOT: stablehlo.gather
  // CHECK: %[[SLICE:.*]] = stablehlo.slice %[[ARG0]] [0:1, 10:11, 4:7] 
  // CHECK-SAME: : (tensor<1x128x194xf64>) -> tensor<1x1x3xf64>
  // CHECK: %[[RESHAPE:.*]] = stablehlo.reshape %[[SLICE]] 
  // CHECK-SAME: : (tensor<1x1x3xf64>) -> tensor<3xf64>  
  %result = "stablehlo.gather"(%arg0, %indices) {
    dimension_numbers = #stablehlo.gather<
      collapsed_slice_dims = [0, 1, 2],
      start_index_map = [0, 1, 2],
      index_vector_dim = 1
    >, 
    indices_are_sorted = false, 
    slice_sizes = array<i64: 1, 1, 1>
  } : (tensor<1x128x194xf64>, tensor<3x3xi64>) -> tensor<3xf64>
  
  return %result : tensor<3xf64>
}

