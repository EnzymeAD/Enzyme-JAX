load("@rules_python//python:py_test.bzl", "py_test")
load("@llvm-project//llvm:lit_test.bzl", "package_path", "lit_test")
load("@bazel_skylib//rules:expand_template.bzl", "expand_template")

expand_template(
    name = "lit_site_cfg_py",
    testonly = True,
    out = "lit.site.cfg.py",
    substitutions = {
        "@LIT_SITE_CFG_IN_HEADER@": "# Autogenerated, do not edit.",
        "@LLVM_TOOLS_BINARY_DIR@": package_path("@llvm-project//llvm:BUILD"),
        "@ENZYMEXLA_BINARY_DIR@": "",
        "@LLVM_LIBS_DIR@": package_path("@llvm-project//llvm:BUILD"),
        "@ENZYME_SOURCE_DIR@": "",
        "@ENZYME_BINARY_DIR@": "",
    },
    template = "lit.site.cfg.py.in",
    visibility = [":__subpackages__"],
)

exports_files(
    ["lit.cfg.py"],
    visibility = [":__subpackages__"],
)

[
    lit_test(
        name = "%s.test" % src,
        srcs = [src],
        data = [
            ":lit.cfg.py",
            ":lit_site_cfg_py",
            "//src/enzyme_ad/jax:enzyme_jax_internal",
            "//:enzymexlamlir-opt",
            "@llvm-project//clang:builtin_headers_gen",
            "@llvm-project//llvm:FileCheck",
            "@llvm-project//llvm:count",
            "@llvm-project//llvm:not",
        ] + glob(["**/*.h"]),
    )
    for src in glob(
        [
            "**/*.pyt", "**/*.mlir",
        ],
    )
]

py_test(
    name = "test",
    srcs = [
        "test.py",
    ],
    deps = [
        "//src/enzyme_ad/jax:enzyme_jax_internal",
    ],
)

py_test(
    name = "bench_vs_xla",
    srcs = [
        "bench_vs_xla.py",
    ],
    deps = [
        "//src/enzyme_ad/jax:enzyme_jax_internal",
    ],
)


py_test(
    name = "llama",
    srcs = [
        "llama.py",
    ],
    deps = [
        "//src/enzyme_ad/jax:enzyme_jax_internal",
    ],
)
