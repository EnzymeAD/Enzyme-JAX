steps:
  - name: "Tag {{matrix.arch}} -- {{matrix.os}} python {{matrix.python}}"
    matrix:
      setup:
        arch:
          - aarch64
          - x86_64
        os:
          - macos
        python:
          - "3.10"
          - "3.11"
          - "3.12"
    agents:
      queue: "juliaecosystem"
      os: "{{matrix.os}}"
      arch: "{{matrix.arch}}"
    env:
      BUILDKITE_PLUGIN_CRYPTIC_BASE64_SIGNED_JOB_ID_SECRET: ${BUILDKITE_PLUGIN_CRYPTIC_BASE64_SIGNED_JOB_ID_SECRET?}
      TWINE_USERNAME: __token__
    plugins:
      - staticfloat/cryptic:
          variables:
            - TWINE_PASSWORD="U2FsdGVkX19DPqNOEUSG1w7VRv4QF4ugt8YOe+9OKDGz3WHspNY8qzqgkdICl5bGOv5deZmHKGj1qMV9SGYhwW1HVgUubH5to0tNPUhtigyTbuUO/DbYyr+mLXhraI2sw4iQ1Zs34yYWd9lxi3kPEKbsYhrYjElgzh5qbq5ui476F3DgHXEGLdgIS0njJajB2uLDzR/721moWurkkBKu/JEAem5m2QrOmsFOt8s05Vv234Gen3Zh9GGjTisfNQRX2sEimZnINKdN80mz5D5nVPDXNgVyKDihfRJmBIRoOE1o3vTgMkemHK/phkRmKjxR"
    if: build.tag != null
    commands: |
      mkdir -p .local/bin
      export PATH="`pwd`/.local/bin:`pwd`/conda/bin:\$PATH"
      echo "openssl md5 | cut -d' ' -f2" > .local/bin/md5
      chmod +x .local/bin/md5

      if [ "{{matrix.os}}" == "macos" ]; then
        curl -fLO "https://github.com/bazelbuild/bazelisk/releases/download/v1.19.0/bazelisk-darwin"
        mv bazelisk-darwin .local/bin/bazel
        chmod +x .local/bin/bazel
      elif [ "{{matrix.os}}" == "linux" ]; then      
        if [ "{{matrix.arch}}" == "aarch64" ]; then
          curl -fLO https://github.com/bazelbuild/bazelisk/releases/download/v1.19.0/bazelisk-linux-arm64
        else
          curl -fLO https://github.com/bazelbuild/bazelisk/releases/download/v1.19.0/bazelisk-linux-amd64
        fi
        mv bazel* .local/bin/bazel
        chmod +x .local/bin/bazel
      else
        if [ "{{matrix.arch}}" == "aarch64" ]; then
          wget https://github.com/bazelbuild/bazel/releases/download/6.2.1/bazel-6.2.1-windows-arm64.exe
        else
          wget https://github.com/bazelbuild/bazel/releases/download/6.2.1/bazel-6.2.1-windows-x86_64.exe
        fi
        mv bazel* .local/bin/bazel.exe
      fi
      mkdir baztmp
      export TAG=`echo $BUILDKITE_TAG | cut -c2-`
      sed -i.bak "s~version = \"[0-9.]*\"~version = \"\$TAG\"~g" BUILD
      HERMETIC_PYTHON_VERSION={{matrix.python}} bazel --output_user_root=`pwd`/baztmp build @llvm-project//llvm:FileCheck
      rm bazel-bin/*.whl
      HERMETIC_PYTHON_VERSION={{matrix.python}} bazel --output_user_root=`pwd`/baztmp build :wheel
      cp bazel-bin/*.whl .
      python -m pip install *.whl
      python -m pip install --user twine
      python -m twine upload *.whl
    artifact_paths:
      - "*.whl"

    timeout_in_minutes: 180
