steps:
  - name: "CI {{matrix.arch}} -- {{matrix.os}}"
    matrix:
      setup:
        arch:
          - aarch64
          - x86_64
        os:
          - macos
        python:
          - "3.10"
    agents:
      queue: "juliaecosystem"
      os: "{{matrix.os}}"
      arch: "{{matrix.arch}}"
    if: build.tag == null
    plugins:
      - cache#v0.6.0:
          manifest: .buildkite/pipeline.yml
          path: .local
          restore: file
          save: file
      - cache#v0.6.0:
          manifest: WORKSPACE
          path: .baztmp
          restore: file
          save: file
    commands: |
      mkdir -p .local/bin
      export PATH="`pwd`/.local/bin:`pwd`/conda/bin:\$PATH"
      echo "openssl md5 | cut -d' ' -f2" > .local/bin/md5
      chmod +x .local/bin/md5

      if [ "{{matrix.os}}" == "macos" ]; then
        if [ "{{matrix.arch}}" == "aarch64" ]; then
          sed -i.bak 's~targets = \[.*\]~targets = \[\"AArch64\", \"AMDGPU\"]~g' WORKSPACE
          curl -fLO https://repo.anaconda.com/miniconda/Miniconda3-py310_23.3.1-0-MacOSX-arm64.sh
        else
          sed -i.bak 's~targets = \[.*\]~targets = \[\"X86\", \"AMDGPU\"]~g' WORKSPACE
          curl -fLO https://repo.anaconda.com/miniconda/Miniconda3-py310_23.3.1-0-MacOSX-{{matrix.arch}}.sh
        fi
        curl -fLO "https://github.com/bazelbuild/bazelisk/releases/download/v1.19.0/bazelisk-darwin"
        mv bazelisk-darwin .local/bin/bazel
        chmod +x .local/bin/bazel
        chmod +x Miniconda*.sh
        ./Miniconda*.sh -b -p `pwd`/conda
        rm Miniconda*.sh
      elif [ "{{matrix.os}}" == "linux" ]; then
        if [ "{{matrix.arch}}" == "aarch64" ]; then
          curl -fLO https://github.com/bazelbuild/bazelisk/releases/download/v1.19.0/bazelisk-linux-arm64
        else
          curl -fLO https://github.com/bazelbuild/bazelisk/releases/download/v1.19.0/bazelisk-linux-amd64
        fi
        mv bazel* .local/bin/bazel
        chmod +x .local/bin/bazel
        wget https://repo.anaconda.com/miniconda/Miniconda3-py310_23.3.1-0-Linux-{{matrix.arch}}.sh
        chmod +x Miniconda*.sh
        ./Miniconda*.sh -b -p `pwd`/conda
        rm Miniconda*.sh
      else
        wget https://repo.anaconda.com/miniconda/Miniconda3-py310_23.3.1-0-Windows-{{matrix.arch}}.exe
        if [ "{{matrix.arch}}" == "aarch64" ]; then
          wget https://github.com/bazelbuild/bazel/releases/download/6.2.1/bazel-6.2.1-windows-arm64.exe
        else
          wget https://github.com/bazelbuild/bazel/releases/download/6.2.1/bazel-6.2.1-windows-x86_64.exe
        fi
        mv bazel* .local/bin/bazel.exe
        start /wait "" Miniconda3*.exe /InstallationType=JustMe /RegisterPython=0 /S /D=`pwd`/conda
        rm Miniconda*.exe
      fi
      # conda install -c conda-forge cxx-compiler -y
      python -m ensurepip --upgrade
      python -m pip install --user numpy wheel
      mkdir -p .baztmp
      rm -f bazel-bin/*.whl
      HERMETIC_PYTHON_VERSION={{matrix.python}} bazel --output_user_root=`pwd`/.baztmp build --define=no_nccl_support=true :enzyme_ad
      cp bazel-bin/*.whl .
      python -m pip install *.whl
      python -m pip install "jax[cpu]"
      bazel --output_user_root=`pwd`/.baztmp test --test_output=errors //test/...
    artifact_paths:
      - "*.whl"

    timeout_in_minutes: 180
