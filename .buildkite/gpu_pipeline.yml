steps:
  - label: "CUDA"
    agents:
      queue: "benchmark"
      gpu: "rtx4070"
      cuda: "*"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 180
    if: build.tag == null
    plugins:
      # - cache#v1.3.0:
      #     manifest: .buildkite/pipeline.yml
      #     path: .local/bin/bazel
      #     restore: file
      #     save: file
      # - cache#v1.3.0:
      #     manifest: workspace.bzl
      #     path: .baztmp
      #     restore: file
      #     save: file
    commands: |
      pwd
      env
      echo "--- Setup :python: Dependencies"
      mkdir -p .local/bin
      export PATH="`pwd`/.local/bin:\$PATH"
      echo "openssl md5 | cut -d' ' -f2" > .local/bin/md5
      chmod +x .local/bin/md5

      if [ ! -f ".local/bin/bazel" ]; then
        curl -fLO https://github.com/bazelbuild/bazelisk/releases/download/v1.19.0/bazelisk-linux-amd64
        mv bazel* .local/bin/bazel
        chmod +x .local/bin/bazel
      fi

      export PATH="`pwd`/.local/bin:\$PATH"

      mkdir -p .baztmp

      echo "--- :python: Test"

      HERMETIC_PYTHON_VERSION="3.11" .local/bin/bazel --output_user_root=`pwd`/.baztmp run //builddeps:requirements.update
      HERMETIC_PYTHON_VERSION="3.11" .local/bin/bazel --output_user_root=`pwd`/.baztmp build --define=xnn_enable_avxvnniint8=false --define=xnn_enable_avxvnni=false --test_output=errors //:wheel
      HERMETIC_PYTHON_VERSION="3.11" .local/bin/bazel --output_user_root=`pwd`/.baztmp test --define=xnn_enable_avxvnniint8=false --define=xnn_enable_avxvnni=false --test_output=errors //test/...

    artifact_paths:
      - "bazel-out/*/testlogs/test/llama/test.log"
      - "bazel-out/*/testlogs/test/bench_vs_xla/test.log"
      - "bazel-out/*/testlogs/test/jaxmd/test.log"
      - "bazel-out/*/testlogs/test/neuralgcm_test/test.log"
      - "bazel-out/*/testlogs/test/keras_test/test.log"
      - "maxtext.log"
